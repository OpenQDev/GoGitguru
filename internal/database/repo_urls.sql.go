// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: repo_urls.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const getRepoURL = `-- name: GetRepoURL :one
SELECT url, status, created_at, updated_at FROM repo_urls WHERE url = $1
`

func (q *Queries) GetRepoURL(ctx context.Context, url string) (RepoUrl, error) {
	row := q.queryRow(ctx, q.getRepoURLStmt, getRepoURL, url)
	var i RepoUrl
	err := row.Scan(
		&i.Url,
		&i.Status,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const insertRepoURL = `-- name: InsertRepoURL :exec
INSERT INTO repo_urls (url, status, created_at, updated_at) 
VALUES ($1, $2, $3, $4)
`

type InsertRepoURLParams struct {
	Url       string       `json:"url"`
	Status    string       `json:"status"`
	CreatedAt time.Time    `json:"created_at"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

func (q *Queries) InsertRepoURL(ctx context.Context, arg InsertRepoURLParams) error {
	_, err := q.exec(ctx, q.insertRepoURLStmt, insertRepoURL,
		arg.Url,
		arg.Status,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}
